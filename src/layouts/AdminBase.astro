---
import '../styles/global.css';

interface Props {
  title?: string;
  description?: string;
  image?: string;
  lang?: 'en' | 'es';
}

const {
  title = 'Admin Panel',
  description = 'Private admin area',
  image = '/og-image.png',
  lang = 'en',
} = Astro.props as Props;

const pathname = Astro.url.pathname || '/admin';
const isActive = (href: string) => {
  if (href === '/admin') return pathname === '/admin';
  return pathname === href || pathname.startsWith(href + '/');
};
---

<html lang={lang}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={image} />
    <link href="https://fonts.googleapis.com/css2?family=Manrope:wght@400;500;600;700;800&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet" />
  </head>
  <body class="bg-background-light dark:bg-background-dark font-display text-gray-900 dark:text-text-secondary">
    <header class="flex items-center justify-between whitespace-nowrap border-b border-slate-200 dark:border-slate-700 px-6 lg:px-10 py-3 bg-white dark:bg-background-dark">
      <div class="flex items-center gap-3 text-slate-900 dark:text-white">
        <img src="/logo.png" alt="Logo" width="28" height="28" class="block" />
        <h2 class="text-lg font-bold">Dashboard</h2>
      </div>
      <div class="flex items-center gap-2">
        <button type="button" onclick="nwq_open()" class="flex min-w-[84px] items-center justify-center rounded-lg h-10 px-4 bg-primary text-white text-sm font-bold">
          New Quote
        </button>
        <button onclick="logout()" class="flex min-w-[84px] items-center justify-center rounded-lg h-10 px-4 border text-sm font-bold">Logout</button>
      </div>
    </header>
    <div class="flex">
      <aside id="adminSidebar" class="hidden md:block w-64 shrink-0 border-r border-slate-200 dark:border-slate-700 bg-white dark:bg-background-dark min-h-[calc(100vh-56px)] transition-all">
        <div class="p-3 flex items-center justify-end">
          <button id="sidebarToggle" type="button" class="inline-flex items-center justify-center w-8 h-8 rounded hover:bg-slate-100 dark:hover:bg-slate-800" onclick="toggleSidebar()" title="Toggle sidebar">
            <span id="sidebarToggleIcon" class="material-symbols-outlined text-slate-700 dark:text-slate-300">chevron_left</span>
          </button>
        </div>
        <nav class="p-4 pt-0 space-y-1">
          <a href="/admin" title="Dashboard" class={`admin-link ${isActive('/admin') ? 'active' : ''}`}>
            <span class="material-symbols-outlined">dashboard</span>
            <span class="label">Dashboard</span>
          </a>
          <a href="/admin/quotes" title="Quotes" class={`admin-link ${isActive('/admin/quotes') ? 'active' : ''}`}>
            <span class="material-symbols-outlined">receipt_long</span>
            <span class="label">Quotes</span>
          </a>
          <a href="/admin/billing/invoices" title="Invoices" class={`admin-link ${isActive('/admin/billing/invoices') ? 'active' : ''}`}>
            <span class="material-symbols-outlined">description</span>
            <span class="label">Invoices</span>
          </a>
          <a href="/admin/plans" title="Plans & Add-ons" class={`admin-link ${isActive('/admin/plans') ? 'active' : ''}`}>
            <span class="material-symbols-outlined">inventory_2</span>
            <span class="label">Plans & Add-ons</span>
          </a>
        </nav>
      </aside>
      <main class="flex-1 px-6 lg:px-10 py-8">
        <slot />
      </main>
    </div>
    <!-- New Quote Modal -->
    <div id="nwq_modal" class="hidden fixed inset-0 z-50 items-center justify-center">
      <div class="absolute inset-0 bg-black/50" onclick="nwq_close()"></div>
      <div class="relative bg-white dark:bg-background-dark rounded-lg shadow-xl border border-gray-200 dark:border-gray-700 w-[95vw] max-w-3xl mx-auto p-6">
        <div class="flex items-center justify-between mb-4">
          <h3 class="text-lg font-bold">New Quote</h3>
          <button class="text-sm px-2 py-1 border rounded" onclick="nwq_close()">Close</button>
        </div>
        <form class="grid grid-cols-1 md:grid-cols-6 gap-3" onsubmit="event.preventDefault(); nwq_quickCreate();">
          <div id="nwq_enquiryId_wrap" class="md:col-span-2">
            <label class="block text-xs mb-1">Request ID (optional)</label>
            <input id="nwq_enquiryId" placeholder="Auto-generated if left blank" class="border px-3 py-2 rounded w-full" />
          </div>
          <div>
            <label class="block text-xs mb-1">Customer Name</label>
            <input id="nwq_billToName" placeholder="John Doe" class="border px-3 py-2 rounded w-full" />
          </div>
          <div>
            <label class="block text-xs mb-1">Email</label>
            <input id="nwq_billToEmail" type="email" placeholder="john@example.com" class="border px-3 py-2 rounded w-full" />
          </div>
          <div>
            <label class="block text-xs mb-1">Phone</label>
            <input id="nwq_billToPhone" type="tel" placeholder="+1 555 123 4567" class="border px-3 py-2 rounded w-full" />
          </div>
          <div>
            <label class="block text-xs mb-1">Currency</label>
            <select id="nwq_currency" class="border px-3 py-2 rounded w-full">
              <option value="TTD">TTD</option>
              <option value="USD">USD</option>
            </select>
          </div>
          <div class="md:col-span-6">
            <div id="nwq_items" class="grid md:grid-cols-6 gap-2">
              <div class="md:col-span-4">
                <label class="block text-xs mb-1">Item Description</label>
                <input data-nwq="desc" placeholder="Service" class="border px-3 py-2 rounded w-full" />
              </div>
              <div>
                <label class="block text-xs mb-1">Qty</label>
                <input data-nwq="qty" type="number" step="0.01" value="1" class="border px-3 py-2 rounded w-full" />
              </div>
              <div>
                <label class="block text-xs mb-1">Unit Price</label>
                <input data-nwq="price" type="number" step="0.01" value="0" class="border px-3 py-2 rounded w-full" />
              </div>
            </div>
            <div class="mt-2 flex gap-2">
              <button type="button" class="px-3 py-2 border rounded text-sm" onclick="nwq_addItem()">Add Item</button>
              <button class="flex items-center justify-center rounded-lg h-10 px-4 bg-primary text-white text-sm font-bold">Create quote</button>
            </div>
          </div>
        </form>
      </div>
    </div>

    <style is:inline>
      #adminSidebar.collapsed { width: 60px; }
      #adminSidebar .label { display: inline; }
      #adminSidebar.collapsed .label { display: none; }
      #adminSidebar nav a.admin-link { display: flex; align-items: center; gap: 0.5rem; padding: 0.5rem 0.75rem; border-radius: 0.5rem; color: rgb(51 65 85); }
      #adminSidebar nav a.admin-link:hover { background: rgba(148,163,184,0.15); }
      .dark #adminSidebar nav a.admin-link { color: rgb(203 213 225); }
      #adminSidebar nav a.admin-link.active { background: rgba(17,115,212,0.1); color: rgb(17,115,212); font-weight: 600; }
      #adminSidebar.collapsed nav a.admin-link { justify-content: center; }
      #sidebarToggleIcon { transition: transform 150ms ease; }
      #adminSidebar.collapsed #sidebarToggleIcon { transform: rotate(180deg); }
    </style>
    <script is:inline>
      async function logout(){
        try { await fetch('/api/auth/logout', { method: 'POST' }); location.replace('/auth/signin'); } catch {}
      }
      (function(){
        const key = 'bwAdminSidebarCollapsed';
        const aside = document.getElementById('adminSidebar');
        const icon = document.getElementById('sidebarToggleIcon');
        function setIcon(){ if (!icon || !aside) return; icon.textContent = aside.classList.contains('collapsed') ? 'chevron_right' : 'chevron_left'; }
        function setCollapsed(v){ if (!aside) return; aside.classList.toggle('collapsed', v); localStorage.setItem(key, v ? '1' : '0'); setIcon(); }
        const stored = localStorage.getItem(key);
        if (stored === '1') setCollapsed(true); else setIcon();
        window.toggleSidebar = function(){ setCollapsed(!(aside?.classList.contains('collapsed'))); };
      })();
      function nwq_open(prefill){
        const m = document.getElementById('nwq_modal');
        m?.classList.remove('hidden');
        m?.classList.add('flex');
        const idWrap = document.getElementById('nwq_enquiryId_wrap');
        const nameEl = document.getElementById('nwq_billToName');
        const emailEl = document.getElementById('nwq_billToEmail');
        const phoneEl = document.getElementById('nwq_billToPhone');
        const idEl = document.getElementById('nwq_enquiryId');
        // reset defaults
        if (!prefill) {
          idWrap?.classList.remove('hidden');
          if (nameEl) nameEl.value = '';
          if (emailEl) emailEl.value = '';
          if (phoneEl) phoneEl.value = '';
          if (idEl) idEl.value = '';
          setTimeout(()=> (idEl?.focus?.()), 0);
          return;
        }
        // hide ID (auto-generated) when invoked from leads
        idWrap?.classList.add('hidden');
        if (nameEl && prefill.name) nameEl.value = prefill.name;
        if (emailEl && prefill.email) emailEl.value = prefill.email;
        if (phoneEl && prefill.phone) phoneEl.value = prefill.phone;
        setTimeout(()=> (nameEl?.focus?.()), 0);
      }
      function nwq_close(){
        const m = document.getElementById('nwq_modal');
        m?.classList.add('hidden');
        m?.classList.remove('flex');
      }
      async function nwq_apiCreate(id, extras = {}){
        const qs = id && id.trim() ? `?enquiryId=${encodeURIComponent(id.trim())}` : '';
        const res = await fetch(`/api/quotes/create${qs}` , {
          method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(extras)
        });
        return res.json();
      }
      function nwq_gatherItems(){
        const container = document.getElementById('nwq_items');
        const descs = container.querySelectorAll('input[data-nwq="desc"]');
        const qtys = container.querySelectorAll('input[data-nwq="qty"]');
        const prices = container.querySelectorAll('input[data-nwq="price"]');
        const items = [];
        for (let i=0;i<descs.length;i++){
          const description = (descs[i].value||'').trim();
          if (!description) continue;
          const qtyN = Number(qtys[i]?.value||'0');
          const priceN = Number(prices[i]?.value||'0');
          const qty = (qtyN > 0 ? qtyN : 0).toFixed(2);
          const unitPrice = (priceN >= 0 ? priceN : 0).toFixed(2);
          items.push({ description, qty, unitPrice, sort: i+1 });
        }
        return items;
      }
      async function nwq_createFrom(id){
        const billToName = (document.getElementById('nwq_billToName')).value.trim() || undefined;
        const billToEmail = (document.getElementById('nwq_billToEmail')).value.trim() || undefined;
        const billToPhone = (document.getElementById('nwq_billToPhone')).value.trim() || undefined;
        const currency = (document.getElementById('nwq_currency')).value || undefined;
        const items = nwq_gatherItems();
        if (items.length === 0) { alert('Add at least one item with description.'); return; }
        const invalid = items.find(it => Number(it.qty) <= 0 || Number(it.unitPrice) < 0);
        if (invalid) { alert('Qty must be > 0 and price >= 0'); return; }
        const json = await nwq_apiCreate(id, { billToName, billToEmail, billToPhone, currency, items });
        if (!json?.ok) { alert('Error: '+(json?.code||'unknown')); return; }
        nwq_close();
        location.href = `/admin/quotes/${json.data.quoteId}`;
      }
      function nwq_addItem(){
        const wrap = document.getElementById('nwq_items');
        const row = document.createElement('div');
        row.className = 'md:col-span-6 grid md:grid-cols-6 gap-2';
        row.innerHTML = `
          <div class="md:col-span-4">
            <label class=\"block text-xs mb-1\">Item Description</label>
            <input data-nwq=\"desc\" placeholder=\"Service\" class=\"border px-3 py-2 rounded w-full\" />
          </div>
          <div>
            <label class=\"block text-xs mb-1\">Qty</label>
            <input data-nwq=\"qty\" type=\"number\" step=\"0.01\" value=\"1\" class=\"border px-3 py-2 rounded w-full\" />
          </div>
          <div>
            <label class=\"block text-xs mb-1\">Unit Price</label>
            <input data-nwq=\"price\" type=\"number\" step=\"0.01\" value=\"0\" class=\"border px-3 py-2 rounded w-full\" />
          </div>`;
        wrap.appendChild(row);
      }
      async function nwq_quickCreate(){
        const id = (document.getElementById('nwq_enquiryId')).value.trim();
        return nwq_createFrom(id);
      }
    </script>
  </body>
  
</html>
