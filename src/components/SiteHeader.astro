---
// SiteHeader props
interface Props {
  lang?: 'en' | 'es';
}
const { lang = 'en' } = Astro.props;
const isEN = lang === 'en';
const pathname = Astro.url.pathname || '/';

function isActive(href: string) {
  const home = isEN ? '/en' : '/es';
  if (href === home) {
    return pathname === home || pathname === `${home}/`;
  }
  return pathname === href || pathname.startsWith(`${href}/`);
}

const isHomePage = pathname === (isEN ? '/en' : '/es') || pathname === (isEN ? '/en/' : '/es/');

const navLinks = isEN
  ? [
      { href: '/en/about', label: 'About' },
      { href: '/en/plans', label: 'Pricing' },
      { href: '/en/how-it-works', label: 'How It Works' },
      { href: '/en/faq', label: 'FAQ' },
    ]
  : [
      { href: '/es/about', label: 'Nosotros' },
      { href: '/es/planes', label: 'Precios' },
      { href: '/es/how-it-works', label: 'Cómo funciona' },
      { href: '/es/faq', label: 'Preguntas' },
    ];
---

<header class="fixed top-0 left-0 right-0 z-50 border-b border-gray-200 dark:border-gray-700 bg-background-light/80 dark:bg-background-dark/80 backdrop-blur-sm">
  <div class="w-full max-w-[960px] mx-auto px-4 sm:px-10 py-3 flex items-center justify-between">
  <!-- Brand con logo -->
  <a id="brand-link" href={isEN ? '/en' : '/es'} class="flex items-center gap-2 text-gray-900 dark:text-text-primary">
    <img
      src="/logo.png"
      alt="ByteWorks logo"
      width="28"
      height="28"
      loading="eager"
      decoding="async"
      class="block"
      onerror="this.style.display='none'; this.nextElementSibling.style.display='inline-block';"
    />
    <span class="font-display text-xl">ByteWorks</span>
  </a>

  <!-- Desktop nav -->
  <nav class="hidden md:flex gap-8 text-gray-700 dark:text-gray-300">
    {navLinks.map((link) => (
      <a
        href={link.href}
        class={`text-sm font-medium leading-normal text-gray-700 dark:text-gray-300 hover:text-primary ${isActive(link.href) ? 'text-gray-900 dark:text-white' : ''}`}
        aria-current={isActive(link.href) ? 'page' : undefined}
      >
        {link.label}
      </a>
    ))}
  </nav>
  <!-- Desktop CTA -->
  <a
    href={isEN ? '/en/contact' : '/es/contacto'}
    class="hidden md:inline-flex min-w-[84px] h-10 px-4 items-center justify-center rounded-lg bg-primary text-white text-sm font-bold tracking-[0.015em] hover:bg-primary/90 transition-colors"
  >
    {isEN ? 'Get Started' : 'Comenzar'}
  </a>

  <!-- Mobile: Hamburger (usa currentColor) -->
  <button
    id="hamburger"
    class="md:hidden relative h-10 w-10 flex items-center justify-center rounded-lg bg-primary/10 text-primary"
    aria-label={isEN ? 'Open menu' : 'Abrir menú'}
    aria-expanded="false"
    aria-controls="mobile-menu"
    type="button"
  >
    <span class="bar"></span>
    <span class="bar"></span>
    <span class="bar"></span>
  </button>
  </div>
</header>

<!-- Overlay for mobile menu -->
<div
  id="menu-overlay"
  class="md:hidden fixed inset-0 bg-black/30 opacity-0 pointer-events-none transition-opacity duration-200 ease-in-out z-[40]"
></div>

<!-- Mobile menu panel -->
<nav
  id="mobile-menu"
  data-state="closed"
  class="md:hidden fixed left-4 right-4 top-16 origin-top transform scale-y-0 opacity-0 pointer-events-none transition-transform duration-200 ease-in-out [will-change:transform,opacity] border border-gray-200 dark:border-gray-700 rounded-lg bg-white/95 dark:bg-background-dark/90 text-gray-800 dark:text-text-secondary shadow-lg z-[60] max-h-[75vh] overflow-auto"
  aria-hidden="true"
  inert
>
  <div class="flex flex-col gap-2 p-4">
    {navLinks.map((link, i) => (
      <a
        href={link.href}
        class={`menu-item py-2 border-b last:border-b-0 border-gray-200 dark:border-gray-700 text-gray-700 dark:text-gray-300 hover:text-primary ${isActive(link.href) ? 'text-gray-900 dark:text-white font-semibold' : ''}`}
        aria-current={isActive(link.href) ? 'page' : undefined}
        style={`--i:${i}`}
      >
        {link.label}
      </a>
    ))}
  </div>
</nav>

<style>
  /* Hamburger usa currentColor para heredar contraste */
  #hamburger .bar {
    position: absolute;
    width: 22px;
    height: 2px;
    background: currentColor;
    border-radius: 2px;
    transition: transform 200ms ease, opacity 200ms ease, top 200ms ease;
  }
  #hamburger .bar:nth-child(1) { top: 12px; }
  #hamburger .bar:nth-child(2) { top: 18px; }
  #hamburger .bar:nth-child(3) { top: 24px; }

  /* Estado abierto: cruz (X) */
  #hamburger.open .bar:nth-child(1) {
    top: 18px;
    transform: rotate(45deg);
  }
  #hamburger.open .bar:nth-child(2) {
    opacity: 0;
    transform: translateX(-6px);
  }
  #hamburger.open .bar:nth-child(3) {
    top: 18px;
    transform: rotate(-45deg);
  }

  /* Mobile menu animation (transform-based) */
  #mobile-menu { transform-origin: top; max-height: 0; overflow: hidden; }
  #mobile-menu.open {
    transform: scaleY(1);
    opacity: 1;
    pointer-events: auto;
    max-height: 100vh; /* collapse when closed, expand when open (no height animation) */
  }

  /* Staggered items */
  #mobile-menu .menu-item {
    opacity: 0;
    transform: translateY(-4px);
    transition: opacity 180ms ease, transform 220ms ease;
    will-change: opacity, transform;
  }
  #mobile-menu.open .menu-item {
    opacity: 1;
    transform: translateY(0);
    transition-delay: calc(30ms * var(--i, 0));
  }

  /* Reduced motion: disable transitions */
  @media (prefers-reduced-motion: reduce) {
    #hamburger .bar { transition: none; }
    #mobile-menu { transition: none; }
    #mobile-menu .menu-item { transition: none; }
  }
</style>


<script>
  (function () {
    function deriveLangFromPath(pathname) {
      if (pathname.startsWith('/es')) return 'es';
      if (pathname.startsWith('/en')) return 'en';
      return 'en';
    }
    function normalizePath(p) {
      if (!p) return '/';
      try { return p.replace(/\/+$/,'') || '/'; } catch { return p; }
    }
    function updateActiveLinks() {
      const pathname = normalizePath(window.location.pathname || '/');
      const lang = deriveLangFromPath(pathname);
      const home = lang === 'es' ? '/es' : '/en';
      const brandEl = document.getElementById('brand-link');
      if (brandEl) brandEl.setAttribute('href', home);
      const header = document.querySelector('header');
      if (!header) return;
      const anchors = header.querySelectorAll('nav a[href^="/"]');
      anchors.forEach((a) => {
        const href = a.getAttribute('href') || '';
        const h = normalizePath(href);
        const active = h === home ? (pathname === home || pathname === home + '/') : (pathname === h || pathname.startsWith(h + '/'));
        if (active) a.setAttribute('aria-current', 'page'); else a.removeAttribute('aria-current');
        const inMobile = !!a.closest('#mobile-menu');
        a.classList.toggle('font-semibold', !!active);
        if (!inMobile) a.classList.toggle('underline', !!active);
      });
    }

    function init() {
      const btn = document.getElementById('hamburger');
      const menu = document.getElementById('mobile-menu');
      const overlay = document.getElementById('menu-overlay');
      if (!btn || !menu) return;

      if (btn.getAttribute('data-bw-bound') === '1') {
        updateActiveLinks();
        return;
      }
      btn.setAttribute('data-bw-bound', '1');

      function lockScroll() { try { document.documentElement.style.overflow = 'hidden'; } catch {} }
      function unlockScroll() { try { document.documentElement.style.overflow = ''; } catch {} }

      function openMenu() {
        btn.classList.add('open');
        btn.setAttribute('aria-expanded', 'true');
        menu.classList.add('open');
        menu.dataset.state = 'open';
        menu.removeAttribute('aria-hidden');
        if ('inert' in menu) (menu).inert = false;
        if (overlay) { overlay.style.opacity = '1'; overlay.style.pointerEvents = 'auto'; }
        lockScroll();
        const firstLink = menu.querySelector('a');
        if (firstLink) firstLink.focus();
        if (!document.body.hasAttribute('data-bw-esc')) {
          document.addEventListener('keydown', (e) => { if (e.key === 'Escape') closeMenu(); });
          document.body.setAttribute('data-bw-esc', '1');
        }
      }
      function closeMenu() {
        btn.classList.remove('open');
        btn.setAttribute('aria-expanded', 'false');
        menu.classList.remove('open');
        menu.dataset.state = 'closed';
        menu.setAttribute('aria-hidden', 'true');
        if ('inert' in menu) (menu).inert = true;
        if (overlay) { overlay.style.opacity = '0'; overlay.style.pointerEvents = 'none'; }
        unlockScroll();
      }

      btn.addEventListener('click', () => {
        const expanded = btn.getAttribute('aria-expanded') === 'true';
        if (expanded) closeMenu(); else openMenu();
      });
      if (overlay) overlay.addEventListener('click', () => closeMenu());
      menu.addEventListener('click', (e) => { const t = e.target; if (t instanceof Element && t.tagName === 'A') closeMenu(); });

      const mql = window.matchMedia('(min-width: 768px)');
      if (mql && mql.addEventListener) { mql.addEventListener('change', (ev) => { if (ev.matches) closeMenu(); }); }

      updateActiveLinks();
      document.addEventListener('astro:page-load', () => { updateActiveLinks(); closeMenu(); });
    }

    init();
    document.addEventListener('astro:page-load', init);
  })();
</script>





