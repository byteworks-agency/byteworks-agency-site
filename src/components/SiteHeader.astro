---
interface Props {
  lang?: 'en' | 'es';
}
const { lang = 'en' } = Astro.props;
const isEN = lang === 'en';
const pathname = Astro.url.pathname || '/';

function isActive(href: string) {
  const home = isEN ? '/en' : '/es';
  if (href === home) {
    return pathname === home || pathname === `${home}/`;
  }
  return pathname === href || pathname.startsWith(`${href}/`);
}

const navLinks = isEN
  ? [
      { href: '/en', label: 'Home' },
      { href: '/en/about', label: 'About' },
      { href: '/en/plans', label: 'Plans' },
      { href: '/en/faq', label: 'FAQ' },
      { href: '/en/contact', label: 'Contact' },
    ]
  : [
      { href: '/es', label: 'Inicio' },
      { href: '/es/about', label: 'Sobre nosotros' },
      { href: '/es/planes', label: 'Planes' },
      { href: '/es/faq', label: 'Preguntas' },
      { href: '/es/contacto', label: 'Contacto' },
    ];
---

<header class="fixed top-0 inset-x-0 z-50 border-b border-gray-200/70 dark:border-gray-800 bg-white/80 dark:bg-gray-900/80 backdrop-blur supports-[backdrop-filter]:bg-white/60 dark:supports-[backdrop-filter]:bg-gray-900/60">
  <div class="container mx-auto px-4 py-4 flex items-center justify-between">
  <!-- Brand con logo -->
  <a id="brand-link" href={isEN ? '/en' : '/es'} class="flex items-center gap-2 text-gray-900 dark:text-white">
    <img
      src="/logo.png"
      alt="ByteWorks logo"
      width="28"
      height="28"
      loading="eager"
      decoding="async"
      class="block"
      onerror="this.style.display='none'; this.nextElementSibling.style.display='inline-block';"
    />
    <span class="font-display text-xl">ByteWorks</span>
  </a>

  <!-- Desktop nav -->
  <nav class="hidden md:flex gap-6 text-gray-900 dark:text-gray-100">
    {navLinks.map((link) => (
      <a
        href={link.href}
        class={`hover:underline ${isActive(link.href) ? 'font-semibold underline' : ''}`}
        aria-current={isActive(link.href) ? 'page' : undefined}
      >
        {link.label}
      </a>
    ))}
  </nav>

  <!-- Mobile: Hamburger (usa currentColor) -->
  <button
    id="hamburger"
    class="md:hidden relative h-10 w-10 flex items-center justify-center text-gray-900 dark:text-white"
    aria-label={isEN ? 'Open menu' : 'Abrir menúº'}
    aria-expanded="false"
    aria-controls="mobile-menu"
    type="button"
  >
    <span class="bar"></span>
    <span class="bar"></span>
    <span class="bar"></span>
  </button>
  </div>
</header>

<!-- Overlay for mobile menu -->
<div
  id="menu-overlay"
  class="md:hidden fixed inset-0 bg-black/30 opacity-0 pointer-events-none transition-opacity duration-200 ease-in-out z-[55]"
></div>

<!-- Mobile menu panel -->
<nav
  id="mobile-menu"
  data-state="closed"
  class="md:hidden fixed left-4 right-4 top-16 origin-top transform scale-y-0 opacity-0 pointer-events-none transition-transform duration-200 ease-in-out [will-change:transform,opacity] border rounded-lg bg-white text-gray-900 dark:bg-gray-900 dark:text-gray-100 shadow-lg z-[60] max-h-[75vh] overflow-auto"
  aria-hidden="true"
  inert
>
  <div class="flex flex-col gap-2 p-4">
    {navLinks.map((link, i) => (
      <a
        href={link.href}
        class={`menu-item py-2 border-b last:border-b-0 border-gray-200 dark:border-gray-700 ${isActive(link.href) ? 'font-semibold' : ''}`}
        aria-current={isActive(link.href) ? 'page' : undefined}
        style={`--i:${i}`}
      >
        {link.label}
      </a>
    ))}
  </div>
</nav>

<style>
  /* Hamburger usa currentColor para heredar contraste */
  #hamburger .bar {
    position: absolute;
    width: 22px;
    height: 2px;
    background: currentColor;
    border-radius: 2px;
    transition: transform 200ms ease, opacity 200ms ease, top 200ms ease;
  }
  #hamburger .bar:nth-child(1) { top: 12px; }
  #hamburger .bar:nth-child(2) { top: 18px; }
  #hamburger .bar:nth-child(3) { top: 24px; }

  /* Estado abierto: cruz (X) */
  #hamburger.open .bar:nth-child(1) {
    top: 18px;
    transform: rotate(45deg);
  }
  #hamburger.open .bar:nth-child(2) {
    opacity: 0;
    transform: translateX(-6px);
  }
  #hamburger.open .bar:nth-child(3) {
    top: 18px;
    transform: rotate(-45deg);
  }

  /* Mobile menu animation (transform-based) */
  #mobile-menu { transform-origin: top; max-height: 0; overflow: hidden; }
  #mobile-menu.open {
    transform: scaleY(1);
    opacity: 1;
    pointer-events: auto;
    max-height: 100vh; /* collapse when closed, expand when open (no height animation) */
  }

  /* Staggered items */
  #mobile-menu .menu-item {
    opacity: 0;
    transform: translateY(-4px);
    transition: opacity 180ms ease, transform 220ms ease;
    will-change: opacity, transform;
  }
  #mobile-menu.open .menu-item {
    opacity: 1;
    transform: translateY(0);
    transition-delay: calc(30ms * var(--i, 0));
  }

  /* Reduced motion: disable transitions */
  @media (prefers-reduced-motion: reduce) {
    #hamburger .bar { transition: none; }
    #mobile-menu { transition: none; }
    #mobile-menu .menu-item { transition: none; }
  }
</style>




