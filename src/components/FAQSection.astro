---
interface FAQItem {
  q: string;
  a: string;
}

const { faqs, lang } = Astro.props;
---

<section id="faq" class="max-w-6xl mx-auto px-4 py-20">
  <h2 class="text-3xl sm:text-4xl font-bold font-display text-center mb-10">
    {lang === "es" ? "Preguntas frecuentes" : "Frequently Asked Questions"}
  </h2>

  <div class="space-y-6">
    {faqs.map((faq: FAQItem, i: number) => (
      <details class="faq group border border-neutral-200 dark:border-neutral-800 rounded-lg p-5 transition-all">
        <summary class="cursor-pointer flex justify-between items-center font-medium text-lg text-neutral-900 dark:text-neutral-100">
          {faq.q}
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-5 w-5 ml-2 transition-transform duration-300 group-open:rotate-180"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            aria-hidden="true"
          >
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
          </svg>
        </summary>

        {/* Panel con transición de altura */}
        <div class="faq-panel mt-3 text-neutral-600 dark:text-neutral-300 leading-relaxed">
          {faq.a}
        </div>
      </details>
    ))}
  </div>
</section>

<style>
  /* Transición suave del panel usando height y overflow */
  .faq-panel {
    overflow: hidden;
    height: 0;
    transition: height 220ms ease;
  }
  /* Quita marcador por defecto de summary en algunos navegadores */
  details > summary { list-style: none; }
  details > summary::-webkit-details-marker { display: none; }
</style>

<script is:inline>
  // Animación suave open/close del <details> controlando la altura real del panel
  const items = document.querySelectorAll('.faq');
  items.forEach((d) => {
    const panel = d.querySelector('.faq-panel');
    if (!panel) return;

    // Si llega abierto desde HTML, ajusta altura inicial
    if (d.hasAttribute('open')) {
      panel.style.height = panel.scrollHeight + 'px';
      // al finalizar, quita height fija para permitir contenido fluido
      panel.addEventListener('transitionend', () => {
        if (d.open) panel.style.height = 'auto';
      }, { once: true });
    }

    d.addEventListener('toggle', () => {
      // cerrar
      if (!d.open) {
        // si estaba 'auto', primero fija la altura actual para poder animar a 0
        if (panel.style.height === 'auto' || panel.style.height === '') {
          panel.style.height = panel.scrollHeight + 'px';
          // forzar reflow
          panel.getBoundingClientRect();
        }
        panel.style.height = '0px';
        return;
      }

      // abrir
      // arranca desde 0
      panel.style.height = '0px';
      // forzar reflow
      panel.getBoundingClientRect();
      // anima hasta el scrollHeight
      panel.style.height = panel.scrollHeight + 'px';

      // al terminar, deja 'auto' para que crezca si cambia el contenido
      const onEnd = () => {
        if (d.open) panel.style.height = 'auto';
        panel.removeEventListener('transitionend', onEnd);
      };
      panel.addEventListener('transitionend', onEnd);
    });
  });
</script>
