---
interface Props {
  lang?: 'en' | 'es';
}
const { lang = 'en' } = Astro.props;
const isEN = lang === 'en';

const navLinks = isEN
  ? [
      { href: '/en', label: 'Home' },
      { href: '/en/plans', label: 'Plans' },
      { href: '/en/contact', label: 'Contact' },
    ]
  : [
      { href: '/es', label: 'Inicio' },
      { href: '/es/planes', label: 'Planes' },
      { href: '/es/contacto', label: 'Contacto' },
    ];
---

<header class="container mx-auto px-4 py-6 flex items-center justify-between">
  <!-- Brand con logo -->
  <a href={isEN ? '/en' : '/es'} class="flex items-center gap-2 text-gray-900 dark:text-white">
    <img
      src="/logo.png"
      alt="ByteWorks logo"
      width="28"
      height="28"
      loading="eager"
      decoding="async"
      class="block"
      onerror="this.style.display='none'; this.nextElementSibling.style.display='inline-block';"
    />
    <span class="font-display text-xl" style="display:none;">ByteWorks</span>
  </a>

  <!-- Desktop nav -->
  <nav class="hidden md:flex gap-6 text-gray-900 dark:text-gray-100">
    {navLinks.map((link) => (
      <a href={link.href} class="hover:underline">{link.label}</a>
    ))}
  </nav>

  <!-- Mobile: Hamburger (usa currentColor) -->
  <button
    id="hamburger"
    class="md:hidden relative h-10 w-10 flex items-center justify-center text-gray-900 dark:text-white"
    aria-label={isEN ? 'Open menu' : 'Abrir menÃº'}
    aria-expanded="false"
    aria-controls="mobile-menu"
    type="button"
  >
    <span class="bar"></span>
    <span class="bar"></span>
    <span class="bar"></span>
  </button>
</header>

<!-- Mobile menu panel -->
<nav
  id="mobile-menu"
  class="md:hidden mx-4 -mt-2 overflow-hidden transition-[max-height,opacity] duration-300 ease-out max-h-0 opacity-0 border rounded-lg bg-white text-gray-900 dark:bg-gray-900 dark:text-gray-100"
>
  <div class="flex flex-col gap-2 p-4">
    {navLinks.map((link) => (
      <a href={link.href} class="py-2 border-b last:border-b-0 border-gray-200 dark:border-gray-700">{link.label}</a>
    ))}
  </div>
</nav>

<style>
  /* Hamburger usa currentColor para heredar contraste */
  #hamburger .bar {
    position: absolute;
    width: 22px;
    height: 2px;
    background: currentColor;
    border-radius: 2px;
    transition: transform 200ms ease, opacity 200ms ease, top 200ms ease;
  }
  #hamburger .bar:nth-child(1) { top: 12px; }
  #hamburger .bar:nth-child(2) { top: 18px; }
  #hamburger .bar:nth-child(3) { top: 24px; }

  /* Estado abierto: cruz (X) */
  #hamburger.open .bar:nth-child(1) {
    top: 18px;
    transform: rotate(45deg);
  }
  #hamburger.open .bar:nth-child(2) {
    opacity: 0;
    transform: translateX(-6px);
  }
  #hamburger.open .bar:nth-child(3) {
    top: 18px;
    transform: rotate(-45deg);
  }
</style>

<script>
  // TS-safe refs
  const btnEl = document.getElementById('hamburger') as HTMLButtonElement | null;
  const menuEl = document.getElementById('mobile-menu') as HTMLElement | null;

  if (btnEl && menuEl) {
    const btn: HTMLButtonElement = btnEl;
    const menu: HTMLElement = menuEl;

    function closeOnEscape(e: KeyboardEvent) {
      if (e.key === 'Escape') {
        btn.classList.remove('open');
        btn.setAttribute('aria-expanded', 'false');
        menu.style.maxHeight = '0px';
        menu.style.opacity = '0';
        document.removeEventListener('keydown', closeOnEscape as EventListener);
      }
    }

    btn.addEventListener('click', () => {
      const isOpen = btn.classList.toggle('open');
      btn.setAttribute('aria-expanded', isOpen ? 'true' : 'false');

      if (isOpen) {
        menu.style.maxHeight = menu.scrollHeight + 'px';
        menu.style.opacity = '1';
        document.addEventListener('keydown', closeOnEscape as EventListener);
      } else {
        menu.style.maxHeight = '0px';
        menu.style.opacity = '0';
        document.removeEventListener('keydown', closeOnEscape as EventListener);
      }
    });

    const mql = window.matchMedia('(min-width: 768px)');
    mql.addEventListener('change', (ev: MediaQueryListEvent) => {
      if (ev.matches) {
        btn.classList.remove('open');
        btn.setAttribute('aria-expanded', 'false');
        menu.style.maxHeight = '0px';
        menu.style.opacity = '0';
      }
    });
  }
</script>