---
const { lang = 'en' } = Astro.props;
const isEN = lang === 'en';

const navLinks = isEN
  ? [
      { href: '/en', label: 'Home' },
      { href: '/en/plans', label: 'Plans' },
      { href: '/en/contact', label: 'Contact' },
      { href: '/en/terms', label: 'Terms' },
    ]
  : [
      { href: '/es', label: 'Inicio' },
      { href: '/es/planes', label: 'Planes' },
      { href: '/es/contacto', label: 'Contacto' },
      { href: '/es/terminos', label: 'Términos' },
    ];
---

<header class="sticky top-0 z-50 bg-white/80 dark:bg-black/80 backdrop-blur-md border-b border-gray-100 dark:border-gray-800">
  <nav class="max-w-6xl mx-auto flex items-center justify-between px-6 py-4">
    <!-- Logo -->
    <a href={isEN ? '/en' : '/es'} class="flex items-center gap-2 font-semibold text-lg">
      <img
        src="/logo-light.png"
        alt="ByteWorks logo"
        class="w-6 h-6 md:w-7 md:h-7 object-contain"
      />
      <span>ByteWorks</span>
    </a>

    <!-- Desktop nav -->
    <div class="hidden md:flex items-center gap-6 text-sm">
      {navLinks.map((link) => (
        <a
          href={link.href}
          class="hover:text-gray-900 dark:hover:text-white text-gray-700 dark:text-gray-300 transition"
        >
          {link.label}
        </a>
      ))}
    </div>

    <!-- Mobile toggle -->
    <button
      id="mobile-menu-button"
      class="md:hidden inline-flex items-center justify-center rounded-md p-2 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-300 dark:focus:ring-gray-700"
      aria-label={isEN ? 'Open menu' : 'Abrir menú'}
      aria-controls="mobile-menu-panel"
      aria-expanded="false"
      type="button"
    >
      <!-- Icon: hamburger -->
      <svg id="icon-open" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 block" viewBox="0 0 24 24" fill="none" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7h16M4 12h16M4 17h16"/>
      </svg>
      <!-- Icon: close -->
      <svg id="icon-close" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 hidden" viewBox="0 0 24 24" fill="none" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
      </svg>
    </button>
  </nav>

  <!-- Mobile panel -->
  <div id="mobile-menu-panel" class="md:hidden hidden border-t border-gray-100 dark:border-gray-800 bg-white/95 dark:bg-black/95 backdrop-blur-md">
    <div class="px-6 py-3 space-y-1">
      {navLinks.map((link) => (
        <a
          href={link.href}
          class="block px-3 py-2 rounded-md text-gray-800 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800"
        >
          {link.label}
        </a>
      ))}
    </div>
  </div>
</header>

<script>
  // Menú móvil: toggle accesible
  document.addEventListener('DOMContentLoaded', () => {
    const btn = document.getElementById('mobile-menu-button');
    const panel = document.getElementById('mobile-menu-panel');
    const iconOpen = document.getElementById('icon-open');
    const iconClose = document.getElementById('icon-close');

    if (!btn || !panel) return;

    const toggle = () => {
      const hidden = panel.classList.toggle('hidden');
      btn.setAttribute('aria-expanded', (!hidden).toString());
      // Icon swap
      if (iconOpen && iconClose) {
        if (hidden) {
          iconOpen.classList.remove('hidden');
          iconClose.classList.add('hidden');
        } else {
          iconOpen.classList.add('hidden');
          iconClose.classList.remove('hidden');
        }
      }
      // Optional: lock scroll when open
      if (!hidden) {
        document.documentElement.classList.add('overflow-hidden', 'md:overflow-auto');
      } else {
        document.documentElement.classList.remove('overflow-hidden', 'md:overflow-auto');
      }
    };

    btn.addEventListener('click', toggle);
    // Cierra al navegar (mejor UX)
    panel.querySelectorAll('a').forEach(a => a.addEventListener('click', () => {
      if (!panel.classList.contains('hidden')) toggle();
    }));
  });
</script>
