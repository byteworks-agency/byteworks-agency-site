---
import AdminBase from '../../layouts/AdminBase.astro';
import { prisma } from '../../lib/db';
import { companyRefFromSeed } from '../../lib/billing/ids';

const title = 'Dashboard';

// Query params: page and archived
const params = Astro.url.searchParams;
const pageParam = Number(params.get('page') || '1');
const page = Number.isFinite(pageParam) && pageParam > 0 ? Math.floor(pageParam) : 1;
const perPage = 20;
const showArchived = (() => {
  const a = (params.get('archived') || '').toLowerCase();
  return a === '1' || a === 'true';
})();

let total = 0;
let totalPages = 1;
let leads: Array<{ id: string; name: string; email: string | null; phone: string | null; preference: string; lang: string | null; createdAt: Date; archived?: boolean; status?: string }>;
const fmtDate = (d: Date | string) => {
  const dt = new Date(d as any);
  const dd = String(dt.getDate()).padStart(2, '0');
  const mm = String(dt.getMonth() + 1).padStart(2, '0');
  const yyyy = dt.getFullYear();
  return `${dd}/${mm}/${yyyy}`;
};
try {
  const where = { archived: showArchived } as any;
  const [count, items] = await Promise.all([
    prisma.contactSubmission.count({ where }),
    prisma.contactSubmission.findMany({
      where,
      orderBy: { createdAt: 'desc' },
      take: perPage,
      skip: (page - 1) * perPage,
      select: { id: true, name: true, email: true, phone: true, preference: true, lang: true, createdAt: true, archived: true, status: true } as any,
    }),
  ]);
  total = count;
  totalPages = Math.max(1, Math.ceil(total / perPage));
  leads = items as any;
} catch (err) {
  console.warn('[dashboard] ContactSubmission table missing - showing empty list until migrations run.');
  leads = [] as any;
}
---

<AdminBase title={title} description="Admin Dashboard" image="/og-image.png" lang="en">
  <section class="max-w-[1200px] mx-auto">
    <h1 class="text-2xl font-bold mb-4">Dashboard</h1>


    <div class="border rounded bg-white dark:bg-background-dark">
      <div class="flex items-center justify-between p-3 border-b dark:border-gray-700">
        <h2 class="font-semibold">Recent contact submissions</h2>
        <span class="text-xs text-gray-600">Page {page} of {totalPages}</span>
      </div>
      <div class="flex flex-col sm:flex-row sm:items-center gap-2 p-3 border-b dark:border-gray-700">
        <label for="search-leads" class="sr-only">Search</label>
        <input
          id="search-leads"
          type="text"
          placeholder="Search by Ref, phone, or name"
          class="w-full sm:flex-1 px-3 py-2 text-sm rounded border outline-none focus:ring-2 focus:ring-blue-500/50 bg-white dark:bg-background-dark dark:border-gray-700"
        />
        <button
          id="toggle-archived"
          type="button"
          title="Toggle archived"
          class="inline-flex items-center gap-2 px-3 py-2 rounded border text-sm hover:bg-slate-50 dark:hover:bg-background-dark/60 dark:border-gray-700"
        >
          {showArchived ? 'Show active' : 'Show archived'}
        </button>
      </div>
      <!-- Desktop table -->
      <div class="hidden lg:block overflow-x-auto">
        <table class="w-full text-sm table-fixed">
          <thead class="bg-gray-50 dark:bg-background-dark/40 text-left">
            <tr>
              <th class="p-2 w-[18%]">ID</th>
              <th class="p-2 w-[22%]">Name</th>
              <th class="p-2 w-[16%]">Phone</th>
              <th class="p-2 w-[20%] hidden xl:table-cell">Email</th>
              <th class="p-2 w-[14%]">Received</th>
              <th class="p-2 w-[6%]">Status</th>
              <th class="p-2 w-[4%] text-right">Actions</th>
            </tr>
          </thead>
          <tbody id="leads_tbody">
            {leads.map((l) => (
              <tr class="border-t" data-raw-id={l.id} data-id={`${companyRefFromSeed(new Date(l.createdAt), l.id)} ${l.id}`} data-name={l.name} data-email={l.email || ''} data-phone={l.phone || ''} data-archived={(l.archived ? 'true' : 'false')} data-status={(l.status as any) || 'new'}>
                <td class="p-2 font-mono text-xs break-all">{companyRefFromSeed(new Date(l.createdAt), l.id)}</td>
                <td class="p-2 truncate" title={l.name}>{l.name}</td>
                <td class="p-2 whitespace-nowrap">{l.phone || ''}</td>
                <td class="p-2 break-all hidden xl:table-cell">{l.email}</td>
                <td class="p-2 text-gray-600 whitespace-nowrap">{fmtDate(l.createdAt)}</td>
                <td class="p-2"><span class="px-2 py-0.5 rounded-full text-[11px] border capitalize">{(l.status as any) || 'new'}</span></td>
                <td class="p-2 text-right whitespace-nowrap">
                  <button type="button" onclick={`nwq_open(${JSON.stringify({ leadId: l.id, name: l.name, email: l.email, phone: l.phone, enquiryId: companyRefFromSeed(new Date(l.createdAt), l.id) })})`} class="inline-flex items-center gap-1 px-3 py-1.5 rounded border text-sm hover:bg-slate-50 dark:hover:bg-background-dark/60 mr-2">
                    Open
                  </button>
                  <button type="button" class="lead-archive inline-flex items-center gap-1 px-3 py-1.5 rounded border text-sm hover:bg-slate-50 dark:hover:bg-background-dark/60" data-id={l.id}>
                    Archive
                  </button>
                </td>
              </tr>
            ))}
            <tr id="leads_empty_row" class="hidden">
              <td class="p-3 text-gray-600" colspan="7">No results</td>
            </tr>
            {leads.length === 0 && (
              <tr>
                <td class="p-3 text-gray-600" colspan="7">No submissions yet.</td>
              </tr>
            )}
          </tbody>
        </table>
      </div>
      <!-- Mobile cards -->
      <div id="leads_cards" class="lg:hidden divide-y">
        {leads.length === 0 && (
          <div class="p-3 text-gray-600">No submissions yet.</div>
        )}
        {leads.map((l) => (
          <article class="p-3 bg-white dark:bg-background-dark" data-raw-id={l.id} data-id={`${companyRefFromSeed(new Date(l.createdAt), l.id)} ${l.id}`} data-name={l.name} data-email={l.email || ''} data-phone={l.phone || ''} data-archived={(l.archived ? 'true' : 'false')} data-status={(l.status as any) || 'new'}>
            <div class="flex items-start justify-between gap-3">
              <div>
                <h3 class="font-semibold leading-tight">{l.name}</h3>
                <p class="text-[11px] text-gray-600 font-mono break-all">{companyRefFromSeed(new Date(l.createdAt), l.id)}</p>
                <p class="text-sm text-gray-800 dark:text-gray-200">{l.phone || ''}</p>
                <p class="text-xs text-gray-600 break-all">{l.email}</p>
              </div>
              <div class="text-right">
                <span class="block text-[10px] uppercase tracking-wide text-gray-500">Received</span>
                <time class="text-xs text-gray-700">{fmtDate(l.createdAt)}</time>
              </div>
            </div>
            <div class="mt-2 flex flex-wrap items-center gap-2 text-xs">
              <span class="px-2 py-0.5 rounded-full border capitalize">{(l.status as any) || 'new'}</span>
            </div>
            <div class="mt-3 flex justify-end gap-2">
              <button type="button" onclick={`nwq_open(${JSON.stringify({ leadId: l.id, name: l.name, email: l.email, phone: l.phone, enquiryId: companyRefFromSeed(new Date(l.createdAt), l.id) })})`} class="inline-flex items-center gap-1 px-3 py-1.5 rounded border text-sm hover:bg-slate-50 dark:hover:bg-background-dark/60">
                Open
              </button>
              <button type="button" class="lead-archive inline-flex items-center gap-1 px-3 py-1.5 rounded border text-sm hover:bg-slate-50 dark:hover:bg-background-dark/60" data-id={l.id}>
                Archive
              </button>
            </div>
          </article>
        ))}
        <div id="leads_empty_cards" class="hidden p-3 text-gray-600">No results</div>
      </div>
      <!-- Pagination controls -->
      <div class="p-3 border-t dark:border-gray-700 flex items-center justify-between">
        <div class="text-xs text-gray-600">Total: {total}</div>
        <div class="flex items-center gap-2">
          {
            page > 1 ? (
              <a href={`/admin?page=${page - 1}&archived=${showArchived ? '1' : '0'}`} class="px-3 py-1.5 border rounded text-sm hover:bg-slate-50 dark:hover:bg-background-dark/60">Previous</a>
            ) : (
              <span class="px-3 py-1.5 border rounded text-sm text-gray-400">Previous</span>
            )
          }
          <span class="text-sm">{page} / {totalPages}</span>
          {
            page < totalPages ? (
              <a href={`/admin?page=${page + 1}&archived=${showArchived ? '1' : '0'}`} class="px-3 py-1.5 border rounded text-sm hover:bg-slate-50 dark:hover:bg-background-dark/60">Next</a>
            ) : (
              <span class="px-3 py-1.5 border rounded text-sm text-gray-400">Next</span>
            )
          }
        </div>
      </div>
    </div>
  </section>
</AdminBase>



